{"ast":null,"code":"import _toConsumableArray from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/src/components/chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport ChatInput from './ChatInp';\nimport ChatMessage from './ChatMsg';\nimport './Chat.css';\nvar URL = 'ws://localhost:3030'; //message array\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      messages: []\n    };\n    _this.ws = new WebSocket(URL);\n\n    _this.addMessage = function (message) {\n      return _this.setState(function (state) {\n        return {\n          messages: [message].concat(_toConsumableArray(state.messages))\n        };\n      });\n    };\n\n    _this.submitMessage = function (messageString) {\n      var message = {\n        name: _this.state.name,\n        message: messageString\n      };\n\n      _this.ws.send(JSON.stringify(message));\n\n      _this.addMessage(message);\n    };\n\n    _this.handleUser1 = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    //WebSockets\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.ws.onopen = function () {\n        console.log('connected');\n      };\n\n      this.ws.onmessage = function (evt) {\n        var message = JSON.parse(evt.data);\n\n        _this2.addMessage(message);\n      };\n\n      this.ws.onclose = function () {\n        console.log('disconnected');\n\n        _this2.setState({\n          ws: new WebSocket(URL)\n        });\n      };\n    } //add message to array\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: 'name',\n        placeholder: 'Enter your name....',\n        value: this.state.name,\n        onChange: this.handleUser1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(ChatInput, {\n        ws: this.ws,\n        onSubmitMessage: function onSubmitMessage(messageString) {\n          return _this3.submitMessage(messageString);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), this.state.messages.map(function (message, index) {\n        return React.createElement(ChatMessage, {\n          key: index,\n          message: message.message,\n          name: message.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \",\");\n      }));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/src/components/chat/Chat.jsx"],"names":["React","Component","ChatInput","ChatMessage","URL","Chat","state","name","messages","ws","WebSocket","addMessage","message","setState","submitMessage","messageString","send","JSON","stringify","handleUser1","e","target","value","onopen","console","log","onmessage","evt","parse","data","onclose","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ChatInput from './ChatInp'\nimport ChatMessage from './ChatMsg'\nimport './Chat.css'\n\nconst URL = 'ws://localhost:3030'\n\n//message array\nclass Chat extends Component{\n    state = {\n        name: '',\n        messages: [],\n    }\n\n    ws = new WebSocket(URL)\n\n    //WebSockets\n    componentDidMount(){\n        this.ws.onopen = () => {\n            console.log('connected')\n        }\n        \n        this.ws.onmessage = evt => {\n            const message = JSON.parse(evt.data)\n            this.addMessage(message)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n            this.setState({\n                ws: new WebSocket(URL),\n            })\n        }\n    }\n    \n    //add message to array\n    addMessage = message => this.setState( \n        state => ({\n            messages: [message, ...state.messages]\n        })\n    )\n    \n    //json websocket handler\n    submitMessage = messageString => {\n        const message = { name: this.state.name, message: messageString}\n        this.ws.send(JSON.stringify(message))\n        this.addMessage(message)\n    }\n    render(){\n        return(\n            <div>\n                <label htmlFor=\"name\">\n                    <input type=\"text\"\n                    id={'name'}\n                    placeholder={'Enter your name....'}\n                    value={this.state.name}\n                    onChange={this.handleUser1}>\n                    </input>\n                </label>\n                \n                <ChatInput\n                ws = {this.ws}\n                onSubmitMessage = {messageString=>\n                this.submitMessage(messageString)}>\n                </ChatInput>\n                {this.state.messages.map((message,index)=>\n                    <ChatMessage \n                    key = {index}\n                    message = {message.message}\n                    name = {message.name}>,\n\n                    </ChatMessage>)}\n            </div>\n        )\n    }\n\n    handleUser1 = (e) => {\n        this.setState({name: e.target.value});\n    };\n  \n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}