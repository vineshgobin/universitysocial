{"ast":null,"code":"import _classCallCheck from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/src/components/Wall/UserWall.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PostService from '../../api/todo/PostService.js';\nimport AuthenticationService from '../todo/AuthenticationService.js';\n\nvar UserWall =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserWall, _Component);\n\n  function UserWall(props) {\n    var _this;\n\n    _classCallCheck(this, UserWall);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserWall).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD'),\n      targetTime: moment(new Time()).format('HH:MM')\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserWall, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.id === -1) {\n        return;\n      }\n\n      var username = AuthenticationService.getLoggedInUserName();\n      PostService.retrievePost(username, this.state.id).then(function (response) {\n        return _this2.setState({\n          description: response.data.description,\n          targetDate: moment(response.data.targetDate).format('YYYY-MM-DD'),\n          targetTime: moment(new Time()).format('HH:MM')\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a post!';\n      } else if (values.description.length < 5) {\n        errors.description = 'Post must contain at least 6 characters!';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Enter a valid Target Date';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var post = {\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        PostService.createPost(username, post).then(function () {\n          return _this3.props.history.push('/posts');\n        });\n      } else {\n        PostService.updatePost(username, this.state.id, post).then(function () {\n          return _this3.props.history.push('/posts');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          description = _this$state.description,\n          targetDate = _this$state.targetDate,\n          targetTime = _this$state.targetTime; //let targetDate = this.state.targetDate\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Posts\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          description: description,\n          targetDate: targetDate,\n          targetTime: targetTime\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"targetDate\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"What's on your mind?\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Post Now!\"));\n      })));\n    }\n  }]);\n\n  return UserWall;\n}(Component);\n\nexport default UserWall;","map":{"version":3,"sources":["/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/src/components/Wall/UserWall.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","PostService","AuthenticationService","UserWall","props","state","id","match","params","description","targetDate","Date","format","targetTime","Time","onSubmit","bind","validate","username","getLoggedInUserName","retrievePost","then","response","setState","data","values","errors","length","isValid","post","createPost","history","push","updatePost","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,MAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADnB;AAETG,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,UAAU,EAAEd,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAHH;AAITC,MAAAA,UAAU,EAAEjB,MAAM,CAAC,IAAIkB,IAAJ,EAAD,CAAN,CAAmBF,MAAnB,CAA0B,OAA1B;AAJH,KAAb;AAOA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AAXe;AAalB;;;;wCAEmB;AAAA;;AAEhB,UAAI,KAAKX,KAAL,CAAWC,EAAX,KAAkB,CAAC,CAAvB,EAA0B;AACtB;AACH;;AAED,UAAIY,QAAQ,GAAGhB,qBAAqB,CAACiB,mBAAtB,EAAf;AAEAlB,MAAAA,WAAW,CAACmB,YAAZ,CAAyBF,QAAzB,EAAmC,KAAKb,KAAL,CAAWC,EAA9C,EACKe,IADL,CACU,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAC5Bd,UAAAA,WAAW,EAAEa,QAAQ,CAACE,IAAT,CAAcf,WADC;AAE5BC,UAAAA,UAAU,EAAEd,MAAM,CAAC0B,QAAQ,CAACE,IAAT,CAAcd,UAAf,CAAN,CAAiCE,MAAjC,CAAwC,YAAxC,CAFgB;AAG5BC,UAAAA,UAAU,EAAEjB,MAAM,CAAC,IAAIkB,IAAJ,EAAD,CAAN,CAAmBF,MAAnB,CAA0B,OAA1B;AAHgB,SAAd,CAAJ;AAAA,OADlB;AAMH;;;6BAEQa,M,EAAQ;AACb,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAI,CAACD,MAAM,CAAChB,WAAZ,EAAyB;AACrBiB,QAAAA,MAAM,CAACjB,WAAP,GAAqB,eAArB;AACH,OAFD,MAEO,IAAIgB,MAAM,CAAChB,WAAP,CAAmBkB,MAAnB,GAA4B,CAAhC,EAAmC;AACtCD,QAAAA,MAAM,CAACjB,WAAP,GAAqB,0CAArB;AACH;;AAED,UAAI,CAACb,MAAM,CAAC6B,MAAM,CAACf,UAAR,CAAN,CAA0BkB,OAA1B,EAAL,EAA0C;AACtCF,QAAAA,MAAM,CAAChB,UAAP,GAAoB,2BAApB;AACH;;AAED,aAAOgB,MAAP;AAEH;;;6BAEQD,M,EAAQ;AAAA;;AACb,UAAIP,QAAQ,GAAGhB,qBAAqB,CAACiB,mBAAtB,EAAf;AAEA,UAAIU,IAAI,GAAG;AACPvB,QAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADR;AAEPG,QAAAA,WAAW,EAAEgB,MAAM,CAAChB,WAFb;AAGPC,QAAAA,UAAU,EAAEe,MAAM,CAACf;AAHZ,OAAX;;AAMA,UAAI,KAAKL,KAAL,CAAWC,EAAX,KAAkB,CAAC,CAAvB,EAA0B;AACtBL,QAAAA,WAAW,CAAC6B,UAAZ,CAAuBZ,QAAvB,EAAiCW,IAAjC,EACKR,IADL,CACU;AAAA,iBAAM,MAAI,CAACjB,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAAN;AAAA,SADV;AAEH,OAHD,MAGO;AACH/B,QAAAA,WAAW,CAACgC,UAAZ,CAAuBf,QAAvB,EAAiC,KAAKb,KAAL,CAAWC,EAA5C,EAAgDuB,IAAhD,EACKR,IADL,CACU;AAAA,iBAAM,MAAI,CAACjB,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAAN;AAAA,SADV;AAEH;;AAEDE,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACH;;;6BAEQ;AAAA,wBAEyC,KAAKpB,KAF9C;AAAA,UAECI,WAFD,eAECA,WAFD;AAAA,UAEcC,UAFd,eAEcA,UAFd;AAAA,UAE0BG,UAF1B,eAE0BA,UAF1B,EAGL;;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,aAAa,EAAE;AAAEJ,UAAAA,WAAW,EAAXA,WAAF;AAAeC,UAAAA,UAAU,EAAVA,UAAf;AAA2BG,UAAAA,UAAU,EAAVA;AAA3B,SADnB;AAEI,QAAA,QAAQ,EAAE,KAAKE,QAFnB;AAGI,QAAA,gBAAgB,EAAE,KAHtB;AAII,QAAA,cAAc,EAAE,KAJpB;AAKI,QAAA,QAAQ,EAAE,KAAKE,QALnB;AAMI,QAAA,kBAAkB,EAAE,IANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASQ,UAACb,KAAD;AAAA,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,aAAnB;AAAiC,UAAA,SAAS,EAAC,KAA3C;AACI,UAAA,SAAS,EAAC,qBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAGI,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,YAAnB;AAAgC,UAAA,SAAS,EAAC,KAA1C;AACI,UAAA,SAAS,EAAC,qBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAKI;AAAU,UAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,IAAI,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CALJ,EAaI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbJ,CADJ;AAAA,OATR,CADJ,CAFJ,CADJ;AAoCH;;;;EA7GkBT,S;;AAgHvB,eAAeQ,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PostService from '../../api/todo/PostService.js'\nimport AuthenticationService from '../todo/AuthenticationService.js'\n\nclass UserWall extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\n            targetTime: moment(new Time()).format('HH:MM')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        if (this.state.id === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUserName()\n\n        PostService.retrievePost(username, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD'),\n                targetTime: moment(new Time()).format('HH:MM')\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a post!'\n        } else if (values.description.length < 5) {\n            errors.description = 'Post must contain at least 6 characters!'\n        }\n\n        if (!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let post = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            PostService.createPost(username, post)\n                .then(() => this.props.history.push('/posts'))\n        } else {\n            PostService.updatePost(username, this.state.id, post)\n                .then(() => this.props.history.push('/posts'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, targetDate, targetTime } = this.state\n        //let targetDate = this.state.targetDate\n\n        return (\n            <div>\n                <h1>Posts</h1>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ description, targetDate, targetTime }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"targetDate\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>What's on your mind?</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    {/* <fieldset className=\"form-group\">\n                                        <label>Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\n                                    </fieldset> */}\n                                    <button className=\"btn btn-success\" type=\"submit\">Post Now!</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserWall"]},"metadata":{},"sourceType":"module"}