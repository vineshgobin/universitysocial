{"ast":null,"code":"import _classCallCheck from \"/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/src/components/sept/Search.jsx\";\nimport React, { Component } from 'react';\nimport ProfileService from '../../api/sept/ProfileService.js';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.getResults = function () {\n      _this.setState({\n        searched: true\n      });\n\n      ProfileService.retrieveSearchByName(_this.state.input).then(function (response) {\n        _this.setState({\n          results: response.data\n        });\n      });\n    };\n\n    _this.displayResults = function () {\n      if (_this.state.results.length == 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"No results\");\n      }\n\n      return _this.state.results.map(function (result) {\n        return (// Prints the following for each result\n          React.createElement(\"div\", {\n            className: \"singleResult\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"resultName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, result.name), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"resultSubtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, result.sid), React.createElement(\"span\", {\n            className: \"resultSubtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, result.course), React.createElement(\"span\", {\n            className: \"resultSubtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, result.bio))\n        );\n      });\n    };\n\n    _this.state = {\n      input: '',\n      searched: false,\n      results: []\n    };\n    return _this;\n  }\n  /**\n   * Change input value as user types into search bar\n   */\n\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(AppMenu, {\n        link: \"Search\",\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), \"Search: \", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"name/id\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.getResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"press\"), React.createElement(\"div\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.searched && this.displayResults()));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/yuuups/Documents/Uni/sept/assignment/code/frontend/todo-app/src/components/sept/Search.jsx"],"names":["React","Component","ProfileService","Search","props","handleChange","event","setState","input","target","value","getResults","searched","retrieveSearchByName","state","then","response","results","data","displayResults","length","map","result","name","sid","course","bio","history"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UAYnBC,YAZmB,GAYJ,UAAAC,KAAK,EAAI;AACpB,YAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;AACH,KAdkB;;AAAA,UAoBnBC,UApBmB,GAoBN,YAAM;AACf,YAAKJ,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACAV,MAAAA,cAAc,CAACW,oBAAf,CAAoC,MAAKC,KAAL,CAAWN,KAA/C,EACKO,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,cAAKT,QAAL,CAAc;AAACU,UAAAA,OAAO,EAAED,QAAQ,CAACE;AAAnB,SAAd;AACH,OAHL;AAIH,KA1BkB;;AAAA,UAgCnBC,cAhCmB,GAgCF,YAAM;AACnB,UAAI,MAAKL,KAAL,CAAWG,OAAX,CAAmBG,MAAnB,IAA6B,CAAjC,EAAoC;AAChC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AACD,aACI,MAAKN,KAAL,CAAWG,OAAX,CAAmBI,GAAnB,CAAuB,UAACC,MAAD;AAAA,eACnB;AACA;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BA,MAAM,CAACC,IAArC,CADJ,EACqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrD,EAEI;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCD,MAAM,CAACE,GAAxC,CAFJ,EAGI;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCF,MAAM,CAACG,MAAxC,CAHJ,EAII;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCH,MAAM,CAACI,GAAxC,CAJJ;AAFmB;AAAA,OAAvB,CADJ;AAWH,KA/CkB;;AAEf,UAAKZ,KAAL,GAAa;AACTN,MAAAA,KAAK,EAAE,EADE;AAETI,MAAAA,QAAQ,EAAE,KAFD;AAGTK,MAAAA,OAAO,EAAE;AAHA,KAAb;AAFe;AAOlB;AAED;;;;;;;6BAwCS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWuB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,cAKY;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,QAAQ,EAAE,KAAKtB,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALZ,EAMI;AAAQ,QAAA,OAAO,EAAE,KAAKM,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAQI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,KAAL,CAAWF,QAAX,IAAuB,KAAKO,cAAL,EAD5B,CARJ,CADJ;AAcH;;;;EAlEgBlB,S;;AAqErB,eAAeE,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport ProfileService from '../../api/sept/ProfileService.js';\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            searched: false,\n            results: []\n        };\n    }\n\n    /**\n     * Change input value as user types into search bar\n     */\n    handleChange = event => {\n        this.setState({input: event.target.value})\n    }\n\n    /**\n     * Sends input to back end search function and stores the resulting list \n     * in results prop\n     */\n    getResults = () => {\n        this.setState({searched: true});\n        ProfileService.retrieveSearchByName(this.state.input)\n            .then(response => {\n                this.setState({results: response.data})\n            })\n    }\n\n    /**\n     * Displays the list of profiles in results prop, generally retrieved by \n     * the search (getResults())\n     */\n    displayResults = () => {\n        if (this.state.results.length == 0) {\n            return <div>No results</div>\n        }\n        return (\n            this.state.results.map((result) =>\n                // Prints the following for each result\n                <div className=\"singleResult\">\n                    <span className=\"resultName\">{result.name}</span><br/>\n                    <span className=\"resultSubtext\">{result.sid}</span>\n                    <span className=\"resultSubtext\">{result.course}</span>\n                    <span className=\"resultSubtext\">{result.bio}</span>\n                </div>\n            )\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container center\">\n                    <AppMenu link=\"Search\" history={this.props.history} />\n                </div>\n\n                Search: <input type=\"text\" placeholder=\"name/id\" onChange={this.handleChange}/>\n                <button onClick={this.getResults}>press</button>\n                \n                <div className=\"results\">\n                    {this.state.searched && this.displayResults()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}