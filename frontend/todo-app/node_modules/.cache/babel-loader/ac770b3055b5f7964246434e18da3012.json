{"ast":null,"code":"import _classCallCheck from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL, JPA_API_URL } from '../../Constants';\nimport AuthenticationService from '../../components/sept/AuthenticationService';\n\nvar ProfileService =\n/*#__PURE__*/\nfunction () {\n  function ProfileService() {\n    _classCallCheck(this, ProfileService);\n  }\n\n  _createClass(ProfileService, [{\n    key: \"retrieveProfile\",\n    value: function retrieveProfile() {\n      var sid = AuthenticationService.getLoggedInUserName();\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/profile/\").concat(sid));\n    }\n  }, {\n    key: \"retrieveUsername\",\n    value: function retrieveUsername() {\n      var sid = AuthenticationService.getLoggedInUserName();\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/profile/name/\").concat(sid));\n    }\n  }, {\n    key: \"retrieveSearch\",\n    value: function retrieveSearch(search) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/search/\").concat(search));\n    }\n  }, {\n    key: \"retrieveSearchId\",\n    value: function retrieveSearchId(search) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/search/getid/\").concat(search));\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(sid, name, course, bio) {\n      return axios.put(\"\".concat(JPA_API_URL, \"/users/profile/\").concat(sid), {\n        \"name\": name,\n        \"course\": course,\n        \"bio\": bio\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(username, password, name, course, bio) {\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/register\"), {\n        \"sid\": username,\n        \"password\": password,\n        \"name\": name,\n        \"course\": course,\n        \"bio\": bio\n      });\n    }\n  }]);\n\n  return ProfileService;\n}();\n\nexport default new ProfileService();","map":{"version":3,"sources":["/Users/Vinesh/Documents/SEPTECH-3.0/frontend/todo-app/src/api/sept/ProfileService.js"],"names":["axios","API_URL","JPA_API_URL","AuthenticationService","ProfileService","sid","getLoggedInUserName","get","search","name","course","bio","put","username","password","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;;IAEMC,c;;;;;;;;;sCAEgB;AACd,UAAIC,GAAG,GAAGF,qBAAqB,CAACG,mBAAtB,EAAV;AACA,aAAON,KAAK,CAACO,GAAN,WAAaL,WAAb,4BAA0CG,GAA1C,EAAP;AACH;;;uCAEkB;AACf,UAAIA,GAAG,GAAGF,qBAAqB,CAACG,mBAAtB,EAAV;AACA,aAAON,KAAK,CAACO,GAAN,WAAaL,WAAb,iCAA+CG,GAA/C,EAAP;AACH;;;mCAEcG,M,EAAQ;AACnB,aAAOR,KAAK,CAACO,GAAN,WAAaL,WAAb,2BAAyCM,MAAzC,EAAP;AACH;;;qCAEgBA,M,EAAQ;AACrB,aAAOR,KAAK,CAACO,GAAN,WAAaL,WAAb,iCAA+CM,MAA/C,EAAP;AACH;;;kCAEaH,G,EAAKI,I,EAAMC,M,EAAQC,G,EAAK;AAClC,aAAOX,KAAK,CAACY,GAAN,WAAaV,WAAb,4BAA0CG,GAA1C,GAAiD;AACpD,gBAAQI,IAD4C;AAEpD,kBAAUC,MAF0C;AAGpD,eAAOC;AAH6C,OAAjD,CAAP;AAKH;;;6BAEQE,Q,EAAUC,Q,EAAUL,I,EAAMC,M,EAAQC,G,EAAK;AAC5C,aAAOX,KAAK,CAACe,IAAN,WAAcb,WAAd,sBAA4C;AAC/C,eAAOW,QADwC;AAE/C,oBAAYC,QAFmC;AAG/C,gBAAQL,IAHuC;AAI/C,kBAAUC,MAJqC;AAK/C,eAAOC;AALwC,OAA5C,CAAP;AAOH;;;;;;AAGL,eAAe,IAAIP,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport { API_URL, JPA_API_URL } from '../../Constants'\nimport AuthenticationService from '../../components/sept/AuthenticationService';\n\nclass ProfileService {\n\n    retrieveProfile() {\n        var sid = AuthenticationService.getLoggedInUserName();\n        return axios.get(`${JPA_API_URL}/users/profile/${sid}`);\n    }\n\n    retrieveUsername() {\n        var sid = AuthenticationService.getLoggedInUserName();\n        return axios.get(`${JPA_API_URL}/users/profile/name/${sid}`);\n    }\n    \n    retrieveSearch(search) {\n        return axios.get(`${JPA_API_URL}/users/search/${search}`);\n    }\n\n    retrieveSearchId(search) {\n        return axios.get(`${JPA_API_URL}/users/search/getid/${search}`);\n    }\n\n    updateProfile(sid, name, course, bio) {\n        return axios.put(`${JPA_API_URL}/users/profile/${sid}`, {\n            \"name\": name,\n            \"course\": course,\n            \"bio\": bio\n        })\n    }\n\n    register(username, password, name, course, bio) {\n        return axios.post(`${JPA_API_URL}/users/register`, {\n            \"sid\": username,\n            \"password\": password,\n            \"name\": name,\n            \"course\": course,\n            \"bio\": bio\n        });\n    }\n}\n\nexport default new ProfileService();\n"]},"metadata":{},"sourceType":"module"}